name: Fetch News Data  # 뉴스 데이터 수집

on: 
  schedule: 
    - cron: "0 9 * * *"  # 매일 오전 9시에 실행
  workflow_dispatch:  # 수동 실행 가능
  push:  
    branches: 
      - main  # main 브랜치에 push 발생 시 실행

jobs:
  fetch_news:
    runs-on: ubuntu-latest  # 최신 우분투 환경에서 실행 

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3  # 현재 GitHub 저장소를 clone
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub 권한 사용

      - name: Python 설정
        uses: actions/setup-python@v4  # Python 설치
        with:
          python-version: "3.9"

      - name: 필요한 패키지 설치
        run: | 
          pip install --upgrade pip setuptools wheel  # pip를 최신 버전으로 업그레이드
          pip install numpy==1.21.0
          pip install selenium==4.8.0
          pip install flask
          pip install beautifulsoup4
          pip install requests
          pip install gensim==3.8.3
          pip install scipy==1.10.1

          sudo apt update
          sudo apt install -y wget curl unzip gnupg  # 필수 도구 설치
          
          # Install Google Chrome (Stable)
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt --fix-broken install -y  # 의존성 문제 해결

          # 크롬 드라이버 설치 (chromium의 버전에 맞는 버전 설치)
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | sed 's/\..*//')
          DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION})
          wget https://chromedriver.storage.googleapis.com/${DRIVER_VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: 뉴스 데이터 크롤링 및 저장
        run: |
          export DISPLAY=:99  # Xvfb를 사용해 가상 디스플레이 설정
          Xvfb :99 -screen 0 1024x768x16 &  # 가상 디스플레이 실행
          python news_script.py  # 웹 크롤링을 실행하는 Python 스크립트 실행

      - name: 변경 사항 커밋 및 푸시
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-action@github.com"
          git add *.db  # 모든 .db 파일 추가
          git commit -am "Update news data (auto)" || echo "No changes to commit"
          git push https://github.com/${{ github.repository }} ${{ github.ref }} 
